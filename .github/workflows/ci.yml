name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:

  ci:
    runs-on: ubuntu-latest


    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: Example
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: localSQL
        ports: ['5432:5432']
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']

    env:

      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/Example
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: localSQL
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17 & Cache
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Full Maven Lifecycle (Clean, Install, Test)

        run: mvn -B clean install


  analyze:
    runs-on: ubuntu-latest
    needs: [ci]
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: SonarQube Analysis
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=app \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}


  package:
    runs-on: ubuntu-latest
    needs: [ci, analyze]

    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app-service:latest
